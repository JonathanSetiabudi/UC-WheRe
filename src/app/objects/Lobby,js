import { User } from '/.User.js'

// 4x4 = 20
// 5x5 = 25
// 4 = 4x4
// 5 = 5x5
// 46 = 4x6
// board theme is string or int?

// convert to react

class Lobby{
    constructor(user, code, gridSize = { width: 4, height: 4 }, boardDiff = 0, boardTheme = 0, numGuess = 1) {
        this.hostID = user.id;
        this.guestID = null; // null on default
        this.playersInLobby = [user.id];  
        this.code = code;
        this.gridSize = gridSize;
        this.boardDiff = boardDiff;
        this.boardTheme = boardTheme;
        this.numGuess = numGuess;
    }

    joinGame(newUser, code) {
        if (code !== this.code) {
            throw new Error('Invalid code.');
        }

        if (this.getNumPlayers() >= 2) {
            throw new Error('Lobby is full.')
        }

        if (this.playersInLobby.includes(newUser.id)) {
            throw new Error(`User ${newUser.id} is already in the lobby.`)
        }

        this.playersInLobby.push(newUser.id);
        this.guestID = newUser.id;
    }

    static hostGame(user, code) {
        return new Lobby(user, code);
    }

    getHostID() {
        return this.hostID;
    }

    getGuestID() {
        return this.guestID;
    }

    getCurrPlayers() {
        return this.playersInLobby;
    }

    getNumPlayers() {
        return this.playersInLobby.length;
    }

    setGridSize(width, height) {
        this.gridSize = { width, height };
    }

    getGridSize() {
        return this.gridSize;
    }

    setBoardDiff(boardDiff) {
        this.boardDiff = boardDiff;
    }

    getBoardDiff() {
        return this.boardDiff;
    }

    setBoardTheme(boardTheme) {
        this.boardTheme = boardTheme;
    }

    getBoardTheme() {
        return this.boardTheme;
    }

    setNumGuess(numGuess) {
        this.numGuess = numGuess;
    }

    getNumGuess() {
        return this.numGuess;
    }
}